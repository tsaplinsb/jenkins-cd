properties([

        parameters(
                [
                        choiceParam(
                                name: 'CHART_NAME',
                                choices: ['kafka-load-consumer', 'kafka-load-producer']
                        ),
                        stringParam(
                                name: 'APP_VERSION',
                                defaultValue: '0.1'
                        ),
                        stringParam(
                                name: 'IMAGE_TAG',
                                defaultValue: ''
                        ),
                        stringParam(
                                name: 'REPLICA_COUNT',
                                defaultValue: '1'
                        )
                ]
        )
])

pipeline {

    options {
        ansiColor('xterm')
        skipDefaultCheckout true
        disableConcurrentBuilds()
    }

    environment {
        WORKDIR = '/workdir'
    }

    agent {
        kubernetes {
            yamlFile 'kafka-app/deploy/builder.yaml'
        }
    }

    stages {

        stage('Checkout') {
            steps {
                script {
                    if (IMAGE_TAG=="") {
                        error("Check entered parameters values: IMAGE_TAG or APP_VERSION. They must not be empty!")
                        currentBuild.result = 'ABORTED'
                    }
                    if (APP_VERSION=="") {
                        error("Check entered parameters values: IMAGE_TAG or APP_VERSION. They must not be empty!")
                        currentBuild.result = 'ABORTED'
                    }
                }
            }
        }

        stage('Clone git repo') {
            steps {
                container('git') {
                    script {
                            sh "if [ ! -d ${WORKDIR}/deploy ]; then git clone https://github.com/tsaplinsb/k8s-jenkins-cd.git ${WORKDIR}/deploy ; fi"    
                            sh "git -C ${WORKDIR}/deploy pull https://github.com/tsaplinsb/k8s-jenkins-cd.git"
                    }
                }
            }
        }

        stage('Deploy') {
            steps {
                container('helm-cli') {
                    script {
                        sh "helm upgrade ${params.CHART_NAME} ${WORKDIR}/deploy/kafka-app/deploy/helm/${params.CHART_NAME} --install \
                            --namespace kafka-app --create-namespace \
                            --set image.tag=\"${params.IMAGE_TAG}\" \
                            --set replicaCount=\"${params.REPLICA_COUNT}\""

                    }
                }
            }
        }
    }
}
