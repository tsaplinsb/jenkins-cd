properties([
// описание параметров сборки пайплайна
        parameters(
                [
                        choiceParam(
                                name: 'CHART_NAME',
                                choices: ['kafka-load-consumer', 'kafka-load-producer']
                        ),
                        stringParam(
                                name: 'IMAGE_TAG',
                                defaultValue: 'latest'
                        ),
                        stringParam(
                                name: 'BUILD_PARAMS',
                                defaultValue: ''
                        )
                ]
        )
])

pipeline {
    options {
        ansiColor('xterm')
        skipDefaultCheckout true
        disableConcurrentBuilds()
    }

    environment {
        WORKDIR = '/workdir'
    }

    agent {
        kubernetes {
            yamlFile 'kafka-app/build/builder.yaml'
        }
    }

    stages {

        stage('Checkout') {
            steps {
                script {
                    if (IMAGE_TAG=="") {
                        error("Enter parameter value: IMAGE_TAG")
                        currentBuild.result = 'ABORTED'
                    }
                }
            }
        }

        stage('Clone git repos') {
            steps {
                container('git') {
                    script {
                            sh "if [ ! -d ${WORKDIR}/k8s-jenkins-cd ]; then git clone https://github.com/tsaplinsb/k8s-jenkins-cd ${WORKDIR}/k8s-jenkins-cd ; fi"
                            sh "git -C ${WORKDIR}/k8s-jenkins-cd pull https://github.com/tsaplinsb/k8s-jenkins-cd"

                            sh "if [ ! -d ${WORKDIR}/kafka-app-demo ]; then git clone https://github.com/tsaplinsb/kafka-app-demo.git ${WORKDIR}/kafka-app-demo ; fi"    
                            sh "git -C ${WORKDIR}/kafka-app-demo pull https://github.com/tsaplinsb/kafka-app-demo.git"
                    }
                }
            }
        }

        stage('Build kafka-load-app Jar') {
            steps {
                container('maven') {
                    script {
                        sh "mvn clean install ${params.BUILD_PARAMS} -f /root/.m2/kafka-app-demo/${params.CHART_NAME}/pom.xml"
                    }
                }
            }
        }

        stage('Kaniko Build & Push Image') {
            steps {
                container('kaniko') {
                    script {
                        sh "/kaniko/executor --dockerfile ${WORKDIR}/k8s-jenkins-cd/kafka-app/build/Dockerfiles/Dockerfile-${params.CHART_NAME} \
                            --context ${WORKDIR} \
                            --force \
                            --destination=sereus/${params.CHART_NAME}:${params.IMAGE_TAG}"
                    }
                }
            }
        }
    }
}
